definitions:
  models.CreateTaskRequest:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  task.Task:
    properties:
      completionDate:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      isCompleted:
        type: boolean
      title:
        type: string
      updatedAt:
        type: string
    type: object
  user.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API documentation.
  title: REST API
  version: "1.0"
paths:
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: Returns list of the created tasks
      parameters:
      - description: Page to retrieve
        in: query
        name: Page
        required: true
        type: integer
      - description: Items per page
        in: query
        name: PageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task.Task'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: List Tasks
    post:
      consumes:
      - application/json
      description: Creates new task
      parameters:
      - description: title and description for the new task
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/task.Task'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create Task
  /api/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes the task with given id
      parameters:
      - description: Task ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete Task
    get:
      consumes:
      - application/json
      description: Returns the task with given id
      parameters:
      - description: Task ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.Task'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get Task
  /api/v1/users:
    get:
      description: Returns authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "500":
          description: Internal Server Error
      summary: Get user info
  /api/v1/users/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Returns token for valid authentication
      parameters:
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User password
        format: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: access_token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Login with existing user
  /api/v1/users/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Registers new user
      parameters:
      - description: User email
        in: formData
        name: email
        required: true
        type: string
      - description: User password
        format: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Register new user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
